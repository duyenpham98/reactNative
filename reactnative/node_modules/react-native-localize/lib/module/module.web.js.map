{"version":3,"sources":["module.web.js"],"names":["USES_FAHRENHEIT","USES_IMPERIAL","USES_RTL_LAYOUT","CURRENCIES","canUseDOM","window","document","createElement","ensureCountryCode","countryCode","toUpperCase","splitLanguageTag","languageTag","split","languageCode","convertLanguageTagToLocale","countryCodeFallback","toLowerCase","isRTL","includes","getCurrentLocale","navigator","language","getCountry","getCalendar","languages","i","length","getCurrencies","currencies","forEach","currency","indexOf","push","getLocales","cache","locales","locale","getNumberFormatSettings","formatter","Intl","NumberFormat","separators","format","replace","decimalSeparator","groupingSeparator","getTemperatureUnit","getTimeZone","DateTimeFormat","hour","resolvedOptions","timeZone","uses24HourClock","Date","match","usesMetricSystem","usesAutoDateAndTime","usesAutoTimeZone","handlers","Set","addEventListener","handler"],"mappings":"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","sourcesContent":["// @flow\n\nimport {\n  USES_FAHRENHEIT,\n  USES_IMPERIAL,\n  USES_RTL_LAYOUT,\n  CURRENCIES,\n} from \"./constants\";\n\nimport type {\n  Calendar,\n  Locale,\n  NumberFormatSettings,\n  Option,\n  TemperatureUnit,\n} from \"./types\";\n\nconst canUseDOM = !!(\n  typeof window !== \"undefined\" &&\n  window.document &&\n  window.document.createElement\n);\n\nfunction ensureCountryCode(countryCode: string): string {\n  return countryCode === \"419\" ? \"UN\" : countryCode.toUpperCase();\n}\n\nfunction splitLanguageTag(\n  languageTag: string,\n): {|\n  languageCode: string,\n  countryCode?: string,\n|} {\n  const [languageCode, countryCode] = languageTag.split(\"-\");\n  return { languageCode, countryCode };\n}\n\nfunction convertLanguageTagToLocale(\n  languageTag: string,\n  countryCodeFallback: string,\n): Locale {\n  let { languageCode, countryCode } = splitLanguageTag(languageTag);\n  languageCode = languageCode.toLowerCase();\n  countryCode = ensureCountryCode(countryCode || countryCodeFallback);\n\n  return {\n    languageCode,\n    countryCode,\n    languageTag: `${languageCode}-${countryCode}`,\n    isRTL: USES_RTL_LAYOUT.includes(languageCode),\n  };\n}\n\nfunction getCurrentLocale(): Locale {\n  return convertLanguageTagToLocale(navigator.language, getCountry());\n}\n\nexport function getCalendar(): Calendar {\n  return \"gregorian\";\n}\n\nexport function getCountry(): string {\n  const { languages } = navigator;\n\n  for (let i = 0; i < languages.length; i++) {\n    const { countryCode } = splitLanguageTag(languages[i]);\n\n    if (countryCode) {\n      return ensureCountryCode(countryCode);\n    }\n  }\n\n  return \"US\";\n}\n\nexport function getCurrencies(): string[] {\n  const { languages } = navigator;\n  const currencies: string[] = [];\n\n  languages.forEach(language => {\n    const { countryCode } = splitLanguageTag(language);\n\n    if (countryCode) {\n      const currency = CURRENCIES[ensureCountryCode(countryCode)];\n\n      if (currencies.indexOf(currency) === -1) {\n        currencies.push(currency);\n      }\n    }\n  });\n\n  if (currencies.length === 0) {\n    currencies.push(\"USD\");\n  }\n\n  return currencies;\n}\n\nexport function getLocales(): Locale[] {\n  const { languages } = navigator;\n  const countryCode = getCountry();\n  const cache: string[] = [];\n  const locales: Locale[] = [];\n\n  languages.forEach(language => {\n    const locale = convertLanguageTagToLocale(language, countryCode);\n\n    if (cache.indexOf(locale.languageTag) === -1) {\n      locales.push(locale);\n      cache.push(locale.languageTag);\n    }\n  });\n\n  return locales;\n}\n\nexport function getNumberFormatSettings(): NumberFormatSettings {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.NumberFormat(languageTag);\n  const separators = [...formatter.format(1000000.1).replace(/\\d/g, \"\")];\n\n  return {\n    decimalSeparator: separators[separators.length - 1],\n    groupingSeparator: separators[0],\n  };\n}\n\nexport function getTemperatureUnit(): TemperatureUnit {\n  return USES_FAHRENHEIT.includes(getCountry()) ? \"fahrenheit\" : \"celsius\";\n}\n\nexport function getTimeZone(): string {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return formatter.resolvedOptions().timeZone || \"Etc/UTC\";\n}\n\nexport function uses24HourClock(): boolean {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return !formatter.format(new Date(2000, 0, 1, 20)).match(/am|pm/i);\n}\n\nexport function usesMetricSystem(): boolean {\n  return !USES_IMPERIAL.includes(getCountry());\n}\n\nexport function usesAutoDateAndTime(): Option<boolean> {}\nexport function usesAutoTimeZone(): Option<boolean> {}\n\nexport const handlers: Set<Function> = new Set();\n\nif (canUseDOM) {\n  window.addEventListener(\"languagechange\", () => {\n    handlers.forEach(handler => handler());\n  });\n}\n"]}